<?php

namespace App\Commands;

use App\Repository\ConfigRepository;
use Illuminate\Support\Facades\File;
use Illuminate\Support\Facades\View;
use Illuminate\Support\Facades\Config;
use LaravelZero\Framework\Commands\Command;

class InitCommand extends Command
{
    /**
     * The signature of the command.
     *
     * @var string
     */
    protected $signature = 'init';

    /**
     * The description of the command.
     *
     * @var string
     */
    protected $description = 'Initialize container configuration';

    /**
     * Execute the console command.
     *
     * @return mixed
     */
    public function handle(ConfigRepository $config)
    {
        $templates = $config->get('templates', []);

        foreach ($templates as $template) {
            $this->task("Generate {$template['name']}", function () use ($config, $template) {
                $destDir = dirname($config->getPath($template['destination']));

                if (!File::exists($destDir)) {
                    File::makeDirectory($destDir, 0766, true);
                }

                Config::set('view.paths', [
                    $config->getPath('./templates')
                ]);

                File::put(
                    $config->getPath($template['destination']),
                    View::make(
                        $template['name'],
                        $config->get('variables', []),
                        [
                            'generated_at' => date('Y-m-d H:i:s'),
                            'generated_by' => 'Generated by Container CLI on ' . date('Y-m-d H:i:s')
                        ]
                    )->render()
                );
            });
        }
    }
}
